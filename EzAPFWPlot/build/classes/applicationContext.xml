<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="  
    http://www.springframework.org/schema/beans   
    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd  
    http://www.springframework.org/schema/tx   
    http://www.springframework.org/schema/tx/spring-tx-3.0.xsd   
    http://www.springframework.org/schema/context   
    http://www.springframework.org/schema/context/spring-context-3.0.xsd">

	<!-- 引入jdbc配置文件 -->
	<context:property-placeholder location="classpath:jdbc.properties" />
	
     <bean id="parentDataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">  
    </bean>  
	<!--创建jdbc数据源 -->
	<bean id="oracledataSource" parent="parentDataSource" >
		<property name="driverClassName" value="${driver}" />
		<property name="url" value="${url}" />
		<property name="username" value="${username}" />
		<property name="password" value="${password}" />
	</bean>
	
	<!-- <bean id="mysqldataSource" parent="parentDataSource" >
		<property name="driverClassName" value="${mysqldriver}" />
		<property name="url" value="${mysqlurl}" />
		<property name="username" value="${mysqlusername}" />
		<property name="password" value="${mysqlpassword}" />
	</bean> -->



     <bean id="dataSource" class="com.founderinternational.rscenter.datasource.DataSources" >  
        <property name="targetDataSources">  
            <map key-type="java.lang.String">  
                <!-- <entry value-ref="mysqldataSource" key="MYSQL"></entry>   -->
                <entry value-ref="oracledataSource" key="ORACLE"></entry>  
            </map>  
        </property>  
        <property name="defaultTargetDataSource" ref="oracledataSource"></property>  
    </bean>  
    
    
    
	<!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- 创建SqlSessionFactory，同时指定数据源 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- 可通过注解控制事务 -->
	<tx:annotation-driven />

	<!-- Mapper接口所在包名，Spring会自动查找其下的Mapper -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.founderinternational.rscenter.mapper" />
	</bean>
     <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"/>
     
     

	<!-- 
	<bean id="TotalTimerStart" class="com.founderinternational.rscenter.totalchart.TotalTimerStart"
        init-method="init" />
	<bean id="TotalTimerStartDetail"
		class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject">
			<bean class="com.founderinternational.rscenter.totalchart.TotalTimerStart"></bean>
		</property>
		<property name="targetMethod">
			<value>startTask</value>
		</property> </bean>-->
	
        
        
       
</beans>  